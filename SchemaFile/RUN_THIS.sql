-- ============================================================================
-- COMPLETE DATABASE SETUP - COPY AND PASTE THIS ENTIRE FILE
-- ============================================================================
-- This converts all tables from UUID to bigint and sets up the complete schema
-- Run this in Supabase SQL Editor
-- ============================================================================

-- STEP 1: Drop ALL foreign key constraints
-- ============================================================================
alter table stories drop constraint if exists stories_rua_id_fkey;
alter table stories drop constraint if exists stories_org_id_fkey;
alter table stories drop constraint if exists stories_negocio_id_fkey;
alter table streets drop constraint if exists streets_cidade_id_fkey;

-- STEP 2: Drop ALL foreign key columns (prevents dependency errors)
-- ============================================================================
alter table stories drop column if exists rua_id;
alter table stories drop column if exists org_id;
alter table stories drop column if exists negocio_id;
alter table streets drop column if exists cidade_id;

-- STEP 3: Convert primary keys from UUID to bigint
-- ============================================================================

-- Cities
alter table cities drop constraint if exists cities_pkey;
alter table cities drop column if exists id;
alter table cities add column id bigint generated by default as identity primary key;

-- Organizations
alter table organizations drop constraint if exists organizations_pkey;
alter table organizations drop column if exists id;
alter table organizations add column id bigint generated by default as identity primary key;

-- Businesses
alter table businesses drop constraint if exists businesses_pkey;
alter table businesses drop column if exists id;
alter table businesses add column id bigint generated by default as identity primary key;

-- Streets
alter table streets drop constraint if exists streets_pkey;
alter table streets drop column if exists id;
alter table streets add column id bigint generated by default as identity primary key;

-- Stories
alter table stories drop constraint if exists stories_pkey;
alter table stories drop column if exists id;
alter table stories add column id bigint generated by default as identity primary key;

-- STEP 4: Add back foreign key columns as bigint
-- ============================================================================

-- streets.cidade_id
alter table streets add column cidade_id bigint;
alter table streets add constraint streets_cidade_id_fkey
  foreign key (cidade_id) references cities(id) on delete set null;

-- stories.rua_id
alter table stories add column rua_id bigint;
alter table stories add constraint stories_rua_id_fkey
  foreign key (rua_id) references streets(id) on delete set null;

-- stories.org_id
alter table stories add column org_id bigint;
alter table stories add constraint stories_org_id_fkey
  foreign key (org_id) references organizations(id) on delete set null;

-- stories.negocio_id
alter table stories add column negocio_id bigint;
alter table stories add constraint stories_negocio_id_fkey
  foreign key (negocio_id) references businesses(id) on delete set null;

-- STEP 5: Create indexes for performance
-- ============================================================================

-- Stories indexes
create index if not exists idx_stories_titulo on public.stories using gin (to_tsvector('simple', coalesce(titulo, '')));
create index if not exists idx_stories_tags on public.stories using gin (tags);
create index if not exists idx_stories_rua_id on public.stories(rua_id);
create index if not exists idx_stories_org_id on public.stories(org_id);
create index if not exists idx_stories_negocio_id on public.stories(negocio_id);

-- STEP 6: Create ads table (new feature)
-- ============================================================================

drop table if exists public.ads cascade;

create table public.ads (
  id bigint primary key generated by default as identity,
  created_at timestamptz not null default now(),
  updated_at timestamptz not null default now(),
  
  -- Content
  title text not null,
  description text,
  image_url text,
  link_url text,
  
  -- Status
  active boolean default true,
  priority integer default 0,
  
  -- Targeting
  rua_id bigint null references public.streets(id) on delete set null,
  match_keywords text[],
  
  -- Scheduling
  start_at timestamptz,
  end_at timestamptz,
  
  -- Placement
  placement text default 'auto' -- 'top', 'inline', 'auto'
);

-- Ads indexes
create index if not exists idx_ads_active on public.ads(active);
create index if not exists idx_ads_rua_id on public.ads(rua_id);
create index if not exists idx_ads_priority on public.ads(priority);

-- STEP 7: Create quiz tables (if they don't exist)
-- ============================================================================

-- Quiz questions
create table if not exists public.quiz_questions (
  id bigint primary key generated by default as identity,
  created_at timestamptz not null default now(),
  
  question text not null,
  option_1 text not null,
  option_2 text not null,
  option_3 text not null,
  option_4 text not null,
  answer integer not null check (answer >= 1 and answer <= 4),
  
  city text, -- 'gramado', 'canela', or null for general
  difficulty text default 'medium' -- 'easy', 'medium', 'hard'
);

-- Quiz submissions
create table if not exists public.quiz (
  id bigint primary key generated by default as identity,
  created_at timestamptz not null default now(),
  
  answers jsonb not null,
  score numeric,
  meta jsonb, -- { name, email, city, percentage }
  user_id text
);

-- ============================================================================
-- DONE! All tables now use bigint for IDs
-- ============================================================================

-- Verify the changes:
select 
  table_name, 
  column_name, 
  data_type 
from information_schema.columns 
where table_schema = 'public' 
  and column_name = 'id'
  and table_name in ('cities', 'streets', 'organizations', 'businesses', 'stories', 'ads', 'quiz_questions', 'quiz')
order by table_name;

-- You should see 'bigint' for all id columns
